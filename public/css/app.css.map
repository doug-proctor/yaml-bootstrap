{"version":3,"sources":["app.scss","bourbon/addons/_prefixer.scss"],"names":[],"mappings":"AAEA;EACC,8EAA6E;EAC7E,aAAY;EACZ,YAAW;EACX,WAAU;EACV,wBAAuB,EALlB;;AAQuB;EAC5B,qBAAoB,EADkB;;AAIvC;EAEC,mBAAkB;EAClB,oBAAmB;EACnB,oBAAmB,EAJZ;EAMP;IACC,kBAAiB;IACjB,gBACA,EAHG;EAKJ;IAEC,YAAW;ICwBL,+BDvB+B;ICO/B,gCDNkB;ICsBlB,wBDtBkB,EAJpB;IAMH;MACA,YAAW;MCmBN,+BDlBgC;MCEhC,gCDDmB;MCiBnB,wBDjBmB,EAHf;EAOX;IACC,oBAAmB;IACnB,YAAW;IACR,aAAY,EAHR;;AAOT;EACC,oBAAmB;EACnB,WAAU;EACV,QAAO;EACP,WAAU;EACV,SAAQ;EACR,UAAS;EACT,aAAY,EAPH;;AAUV;EAEC,YAAW;EACX,oBAAmB;EACnB,SAAQ;EACR,QAAO;EACP,WAAU;EACV,eAAc;EACd,mBAAkB;EAClB,WAAU;EACV,cAAa;EACb,kBAAiB;EACjB,wBAAuB;EACvB,iBAAgB;EAChB,eAAc;EClBP,yDDoBoC,EAhBxB;EAkBH;ICtCT,sCDuCuB;ICvBvB,8BDuBuB,EADX;;AAKpB;EAEC,YAAW;EACX,YAAW;EACX,WAAU;EACV,oBAAmB;EACnB,UAAS;EACT,QAAO;EACP,WAAU;EACV,cAAa;EACb,cAAa;EACb,6BAA4B;ECtCrB,yDDwCoC,EAb1B;EAeD;IACf,aAAY,EADM;;AAKpB;EACC,oBAAmB;EACnB,YAAW;EACX,WAAU,EAHO;;AAMlB;EACC,gBAAe;EACf,oBAAmB;EACnB,WAAU;EACV,YAAW,EAJU;;AAOtB;EACC,gBAAe;EACf,oBAAmB;EACnB,WAAU;EACV,aAAY,EAJS","file":"app.css","sourcesContent":["@import \"bourbon/bourbon\";\n\nbody {\n\tfont-family: Lato, 'Helvetica Neue', helvetica, arial, sans-serif !important;\n\tcolor: #666;\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\nbody *, body *::after, body *::before {\n\tbox-sizing: inherit;\n}\n\n.intro {\n\n\tmargin-top: 200px;\n\ttext-align: center;\n\tposition: relative;\n\n\th1 {\n\t\tfont-weight: 300;\n\t\tcolor: #F75C5A\n\t}\n\n\timg {\n\n\t\topacity: 1;\n\t\t@include transition(all, 0.2s, linear);\n\t\t@include transform(scale(1,1));\n\n\t\t&.shrunk {\n\t\t\topacity: 0;\n\t\t\t@include transition(all, 0.2s, linear);\n\t\t\t@include transform(scale(0,0));\n\t\t}\n\t}\n\n\t.links {\n\t\tposition: absolute;\n\t\ttop: 175px;\n    \twidth: 100%;\n\t}\n}\n\n.preview {\n\tposition: absolute;\n\ttop: 50px;\n\ttop: 0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\twidth: 100%;\n}\n\n.preview__textarea {\n\n\twidth: 34%;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tbottom: 0;\n\tpadding: 20px;\n\tpadding-top: 70px;\n\tmargin: 0;\n\tborder: none;\n\tbackground: #eee;\n\tfont-family: monospace;\n\tfont-size: 14px;\n\toutline: none;\n\n\t@include transition(all, 0.2s, cubic-bezier(0,.73,.1,.99));\n\n\t.sidebar-closed & {\n\t\t@include transform(translateX(-100%));\n\t}\n}\n\n.preview__iframe {\n\n\twidth: 66%;\n\tpadding: 0;\n\tmargin: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tbottom: 0;\n\theight: 100%;\n\tborder: none;\n\tborder-left: 1px solid #aaa;\n\n\t@include transition(all, 0.2s, cubic-bezier(0,.73,.1,.99));\n\n\t.sidebar-closed & {\n\t\twidth: 100%;\n\t}\n}\n\n.preview__toggle {\n\tposition: absolute;\n\tleft: 20px;\n\ttop: 20px;\n}\n\n.preview__update-btn {\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 80px;\n}\n\n.preview__share-link {\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 200px;\n}","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n"],"sourceRoot":"/source/"}